//
// time: Mon Jan 24 14:13:55 2005
//
// version: 3.2.0 (format), 4.3.0 (DX)
//
//
//
// macro reference (indirect): ClipSurfaceMacro ClipSurfaceMacro.net
//
// macro reference (direct): clipvmacro clipvmacro.net
include "clipvmacro.net"
//
// MODULE main
//
// comment: Generated by EXC!TiNG version 0.7.45 (J. K. Dewhurst, S. Sharma, C. Ambrosch-Draxl)
// comment: Implemented by S. A. Sagmeister
// page assignment: clip	order=3, windowed=0, showing=0
// page assignment: draw	order=4, windowed=0, showing=0
// page assignment: iso	order=2, windowed=0, showing=1
// workspace: width = 558, height = 590
// layout: snap = 0, width = 50, height = 50, align = NN
//
macro main(
) -> (
) {
    // 
    // node Camera[1]: x = 301, y = 341, inputs = 9, label = Camera
    // input[2]: defaulting = 0, visible = 1, type = 8, value = [3 3 3.5]
    // input[4]: defaulting = 0, visible = 1, type = 1, value = 500
    // input[5]: defaulting = 0, visible = 1, type = 5, value = 1.0
    // input[6]: defaulting = 0, visible = 1, type = 8, value = NULL
    // input[7]: defaulting = 0, visible = 1, type = 3, value = 1
    // input[8]: defaulting = 0, visible = 1, type = 5, value = 30.0
    // input[9]: defaulting = 0, visible = 1, type = 32, value = "black"
    // page group: draw
    //
main_Camera_1_out_1 = 
    Camera(
    main_Camera_1_in_1,
    main_Camera_1_in_2,
    main_Camera_1_in_3,
    main_Camera_1_in_4,
    main_Camera_1_in_5,
    main_Camera_1_in_6,
    main_Camera_1_in_7,
    main_Camera_1_in_8,
    main_Camera_1_in_9
    ) [instance: 1, cache: 1];
    // 
    // node Import[6]: x = 320, y = 169, inputs = 6, label = Import
    // input[1]: defaulting = 0, visible = 1, type = 32, value = "FERMI_BZ.dx"
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "clipnormals"
    // input[3]: defaulting = 0, visible = 1, type = 32, value = "dx"
    // input[4]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[5]: defaulting = 1, visible = 0, type = 1, value = 1
    // page group: iso
    //
main_Import_6_out_1[cache: 0] = 
    Import(
    main_Import_6_in_1,
    main_Import_6_in_2,
    main_Import_6_in_3,
    main_Import_6_in_4,
    main_Import_6_in_5,
    main_Import_6_in_6
    ) [instance: 6, cache: 1];
    // 
    // node Transmitter[28]: x = 312, y = 526, inputs = 1, label = clip_normals
    // page group: iso
    //
clip_normals = main_Import_6_out_1;
    // 
    // node Receiver[32]: x = 353, y = 54, inputs = 1, label = clip_normals
    // page group: clip
    //
main_Receiver_32_out_1[cache: 0] = clip_normals;
    // 
    // node ForEachMember[3]: x = 293, y = 160, inputs = 1, label = ForEachMember
    // page group: clip
    //
main_ForEachMember_3_out_1,
main_ForEachMember_3_out_2,
main_ForEachMember_3_out_3 = 
    ForEachMember(
    main_Receiver_32_out_1
    ) [instance: 3, cache: 1];
    // 
    // node Transmitter[23]: x = 363, y = 298, inputs = 1, label = loop_done
    // page group: clip
    //
loop_done = main_ForEachMember_3_out_3;
    // 
    // node Receiver[29]: x = 125, y = 455, inputs = 1, label = loop_done
    // page group: clip
    //
main_Receiver_29_out_1[cache: 0] = loop_done;
    // 
    // node Import[9]: x = 96, y = 164, inputs = 6, label = Import
    // input[1]: defaulting = 0, visible = 1, type = 32, value = "FERMI.dx"
    // input[3]: defaulting = 0, visible = 1, type = 32, value = "dx"
    // page group: iso
    //
main_Import_9_out_1 = 
    Import(
    main_Import_9_in_1,
    main_Import_9_in_2,
    main_Import_9_in_3,
    main_Import_9_in_4,
    main_Import_9_in_5,
    main_Import_9_in_6
    ) [instance: 9, cache: 1];
    // 
    // node Include[1]: x = 52, y = 285, inputs = 6, label = Include
    // input[3]: defaulting = 0, visible = 1, type = 5, value = 6.9
    // page group: iso
    //
main_Include_1_out_1 = 
    Include(
    main_Import_9_out_1,
    main_Include_1_in_2,
    main_Include_1_in_3,
    main_Include_1_in_4,
    main_Include_1_in_5,
    main_Include_1_in_6
    ) [instance: 1, cache: 1];
    // 
    // node ScalarList[3]: x = 217, y = 307, inputs = 11, label = ScalarList
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "ScalarList_3"
    // input[3]: defaulting = 1, visible = 0, type = 16777221, value = { 0.0 }
    // input[5]: defaulting = 1, visible = 0, type = 5, value = -1000000.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1000000.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 5
    // output[1]: visible = 1, type = 16777221, value = { 0.0 }
    // page group: iso
    //
    // 
    // node Isosurface[3]: x = 121, y = 377, inputs = 6, label = Isosurface
    // input[2]: defaulting = 1, visible = 1, type = 5, value = NULL
    // input[3]: defaulting = 0, visible = 1, type = 1, value = 1
    // page group: iso
    //
main_Isosurface_3_out_1 = 
    Isosurface(
    main_Include_1_out_1,
    main_ScalarList_3_out_1,
    main_Isosurface_3_in_3,
    main_Isosurface_3_in_4,
    main_Isosurface_3_in_5,
    main_Isosurface_3_in_6
    ) [instance: 3, cache: 1];
    // 
    // node Transmitter[18]: x = 165, y = 525, inputs = 1, label = surface_data
    // page group: iso
    //
surface_data = main_Isosurface_3_out_1;
    // 
    // node Receiver[27]: x = 32, y = 49, inputs = 1, label = surface_data
    // page group: clip
    //
main_Receiver_27_out_1[cache: 0] = surface_data;
    // 
    // node GetLocal[2]: x = 128, y = 251, inputs = 3, label = GetLocal
    // page group: clip
    //
main_GetLocal_2_out_1,
main_GetLocal_2_out_2 = 
    GetLocal(
    main_Receiver_27_out_1,
    main_GetLocal_2_in_2,
    main_GetLocal_2_in_3
    ) [instance: 2, cache: 1];
    // 
    // node Transmitter[19]: x = 36, y = 528, inputs = 1, label = volume_data
    // page group: iso
    //
volume_data = main_Import_9_out_1;
    // 
    // node Receiver[26]: x = 178, y = 49, inputs = 1, label = volume_data
    // page group: clip
    //
main_Receiver_26_out_1[cache: 0] = volume_data;
    // 
    // node clipvmacro[1]: x = 228, y = 286, inputs = 4, label = clipvmacro
    // page group: clip
    //
main_clipvmacro_1_out_1 = 
    clipvmacro(
    main_GetLocal_2_out_1,
    main_Receiver_26_out_1,
    main_ForEachMember_3_out_1,
    main_ForEachMember_3_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Route[5]: x = 236, y = 471, inputs = 2, outputs = 2, label = Route
    // page group: clip
    //
main_Route_5_out_1,
main_Route_5_out_2 = 
    Route(
    main_Receiver_29_out_1,
    main_clipvmacro_1_out_1
    ) [instance: 5, cache: 1];
    // 
    // node Transmitter[21]: x = 154, y = 584, inputs = 1, label = output_data
    // page group: clip
    //
output_data = main_Route_5_out_1;
    // 
    // node Receiver[25]: x = 84, y = 66, inputs = 1, label = output_data
    // page group: draw
    //
main_Receiver_25_out_1[cache: 0] = output_data;
    // 
    // node Scalar[10]: x = 241, y = 134, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_10"
    // input[2]: defaulting = 1, visible = 1, type = 67108863, value = NULL
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 1.0 
    // input[5]: defaulting = 1, visible = 0, type = 5, value = -1000000.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1000000.0
    // input[7]: defaulting = 0, visible = 0, type = 5, value = 0.1
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 5
    // output[1]: visible = 1, type = 5, value = 1.0 
    // page group: draw
    //
main_Scalar_10_out_1[cache: 2] = 
    Scalar(
    main_Scalar_10_in_1,
    main_Scalar_10_in_2,
    main_Scalar_10_in_3,
    main_Scalar_10_in_4,
    main_Scalar_10_in_5,
    main_Scalar_10_in_6,
    main_Scalar_10_in_7,
    main_Scalar_10_in_8,
    main_Scalar_10_in_9,
    main_Scalar_10_in_10,
    main_Scalar_10_in_11
    ) [instance: 10, cache: 1];
    // 
    // node Color[7]: x = 124, y = 236, inputs = 5, label = Color
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "gold"
    // input[3]: defaulting = 1, visible = 1, type = 5, value = 0.5
    // page group: draw
    //
main_Color_7_out_1 = 
    Color(
    main_Receiver_25_out_1,
    main_Color_7_in_2,
    main_Scalar_10_out_1,
    main_Color_7_in_4,
    main_Color_7_in_5
    ) [instance: 7, cache: 1];
    // 
    // node Scale[2]: x = 124, y = 370, inputs = 2, label = Scale
    // input[2]: defaulting = 0, visible = 1, type = 8, value = [1 1 1]
    // page group: draw
    //
main_Scale_2_out_1 = 
    Scale(
    main_Color_7_out_1,
    main_Scale_2_in_2
    ) [instance: 2, cache: 1];
    // 
    // node Image[8]: x = 172, y = 489, inputs = 49, label = Image
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Image_8"
    // input[4]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[5]: defaulting = 0, visible = 0, type = 8, value = [-1.49012e-07 -1.78814e-07 -1.78814e-07]
    // input[6]: defaulting = 0, visible = 0, type = 8, value = [3.2385 3.2385 3.98889]
    // input[7]: defaulting = 0, visible = 0, type = 5, value = 3.25478
    // input[8]: defaulting = 0, visible = 0, type = 1, value = 640
    // input[9]: defaulting = 0, visible = 0, type = 5, value = 0.751
    // input[10]: defaulting = 0, visible = 0, type = 8, value = [0 1 0]
    // input[11]: defaulting = 1, visible = 0, type = 5, value = 30.0002
    // input[12]: defaulting = 0, visible = 0, type = 1, value = 0
    // input[14]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[15]: defaulting = 1, visible = 0, type = 32, value = "none"
    // input[16]: defaulting = 1, visible = 0, type = 32, value = "none"
    // input[17]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[18]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[19]: defaulting = 0, visible = 0, type = 1, value = 0
    // input[29]: defaulting = 1, visible = 0, type = 3, value = 0
    // input[41]: defaulting = 0, visible = 0, type = 32, value = "rotate"
    // page group: draw
    // depth: value = 24
    // window: position = (0.5064,0.2010), size = 0.4671x0.4971
    // internal caching: 1
    //
main_Image_8_out_1,
main_Image_8_out_2,
main_Image_8_out_3 = 
    Image(
    main_Image_8_in_1,
    main_Scale_2_out_1,
    main_Image_8_in_3,
    main_Image_8_in_4,
    main_Image_8_in_5,
    main_Image_8_in_6,
    main_Image_8_in_7,
    main_Image_8_in_8,
    main_Image_8_in_9,
    main_Image_8_in_10,
    main_Image_8_in_11,
    main_Image_8_in_12,
    main_Image_8_in_13,
    main_Image_8_in_14,
    main_Image_8_in_15,
    main_Image_8_in_16,
    main_Image_8_in_17,
    main_Image_8_in_18,
    main_Image_8_in_19,
    main_Image_8_in_20,
    main_Image_8_in_21,
    main_Image_8_in_22,
    main_Image_8_in_23,
    main_Image_8_in_24,
    main_Image_8_in_25,
    main_Image_8_in_26,
    main_Image_8_in_27,
    main_Image_8_in_28,
    main_Image_8_in_29,
    main_Image_8_in_30,
    main_Image_8_in_31,
    main_Image_8_in_32,
    main_Image_8_in_33,
    main_Image_8_in_34,
    main_Image_8_in_35,
    main_Image_8_in_36,
    main_Image_8_in_37,
    main_Image_8_in_38,
    main_Image_8_in_39,
    main_Image_8_in_40,
    main_Image_8_in_41,
    main_Image_8_in_42,
    main_Image_8_in_43,
    main_Image_8_in_44,
    main_Image_8_in_45,
    main_Image_8_in_46,
    main_Image_8_in_47,
    main_Image_8_in_48,
    main_Image_8_in_49
    ) [instance: 8, cache: 1];
    // 
    // node SetLocal[2]: x = 127, y = 361, inputs = 3, label = SetLocal
    // page group: clip
    //
    SetLocal(
    main_clipvmacro_1_out_1,
    main_GetLocal_2_out_2,
    main_SetLocal_2_in_3
    ) [instance: 2, cache: 1];
    //
    // decorator Annotate	pos=(139,59) size=320x66 style(Label), font=huge_normal, value = <NULL>
    // annotation user_begin: 52
    // annotation user: Fermi Surface Plotting
    // annotation user: last modification: 2005/01/17
    // annotation user_end: <NULL>
    // page group: iso
    //
    // decorator Annotate	pos=(320,312) size=238x28 style(Label), font=normal, value = <NULL>
    // annotation user_begin: 36
    // annotation user: <--- Deviation from the Fermi energy
    // annotation user_end: <NULL>
    // page group: iso
    //
    // decorator Annotate	pos=(302,151) size=146x28 style(Label), font=normal, value = <NULL>
    // annotation user_begin: 22
    // annotation user: <-- Opacity of surface
    // annotation user_end: <NULL>
    // page group: draw
    //
    // decorator Annotate	pos=(315,298) size=193x28 style(Label), value = <NULL>
    // annotation user_begin: 27
    // annotation user: Define your point of view:)
    // annotation user_end: <NULL>
    // page group: draw
// network: end of macro body
CacheScene(main_Image_8_in_1, main_Image_8_out_1, main_Image_8_out_2);
}
main_Camera_1_in_1 = NULL;
main_Camera_1_in_2 = [3 3 3.5];
main_Camera_1_in_3 = NULL;
main_Camera_1_in_4 = 500;
main_Camera_1_in_5 = 1.0;
main_Camera_1_in_6 = NULL;
main_Camera_1_in_7 = 1;
main_Camera_1_in_8 = 30.0;
main_Camera_1_in_9 = "black";
main_Import_6_in_1 = "FERMI_BZ.dx";
main_Import_6_in_2 = "clipnormals";
main_Import_6_in_3 = "dx";
main_Import_6_in_4 = NULL;
main_Import_6_in_5 = NULL;
main_Import_6_in_6 = NULL;
main_Import_6_out_1 = NULL;
main_Transmitter_28_out_1 = NULL;
main_Receiver_32_out_1 = NULL;
main_ForEachMember_3_out_1 = NULL;
main_ForEachMember_3_out_3 = NULL;
main_Transmitter_23_out_1 = NULL;
main_Receiver_29_out_1 = NULL;
main_Import_9_in_1 = "FERMI.dx";
main_Import_9_in_2 = NULL;
main_Import_9_in_3 = "dx";
main_Import_9_in_4 = NULL;
main_Import_9_in_5 = NULL;
main_Import_9_in_6 = NULL;
main_Import_9_out_1 = NULL;
main_Include_1_in_2 = NULL;
main_Include_1_in_3 = 6.9;
main_Include_1_in_4 = NULL;
main_Include_1_in_5 = NULL;
main_Include_1_in_6 = NULL;
main_Include_1_out_1 = NULL;
main_ScalarList_3_in_1 = "ScalarList_3";
main_ScalarList_3_in_2 = NULL;
main_ScalarList_3_in_3 = NULL;
main_ScalarList_3_in_4 = NULL;
main_ScalarList_3_in_5 = NULL;
main_ScalarList_3_in_6 = NULL;
main_ScalarList_3_in_7 = NULL;
main_ScalarList_3_in_8 = NULL;
main_ScalarList_3_in_9 = NULL;
main_ScalarList_3_in_10 = NULL;
main_ScalarList_3_in_11 = NULL;
main_ScalarList_3_out_1 = { 0.0 };
main_Isosurface_3_in_3 = 1;
main_Isosurface_3_in_4 = NULL;
main_Isosurface_3_in_5 = NULL;
main_Isosurface_3_in_6 = NULL;
main_Isosurface_3_out_1 = NULL;
main_Transmitter_18_out_1 = NULL;
main_Receiver_27_out_1 = NULL;
main_GetLocal_2_in_2 = NULL;
main_GetLocal_2_in_3 = NULL;
main_GetLocal_2_out_1 = NULL;
main_GetLocal_2_out_2 = NULL;
main_Transmitter_19_out_1 = NULL;
main_Receiver_26_out_1 = NULL;
main_clipvmacro_1_out_1 = NULL;
main_Route_5_out_1 = NULL;
main_Transmitter_21_out_1 = NULL;
main_Receiver_25_out_1 = NULL;
main_Scalar_10_in_1 = "Scalar_10";
main_Scalar_10_in_2 = NULL;
main_Scalar_10_in_3 = 1.0 ;
main_Scalar_10_in_4 = NULL;
main_Scalar_10_in_5 = NULL;
main_Scalar_10_in_6 = NULL;
main_Scalar_10_in_7 = 0.1;
main_Scalar_10_in_8 = NULL;
main_Scalar_10_in_9 = NULL;
main_Scalar_10_in_10 = NULL;
main_Scalar_10_in_11 = NULL;
main_Scalar_10_out_1 = 1.0 ;
main_Color_7_in_2 = "gold";
main_Color_7_in_4 = NULL;
main_Color_7_in_5 = NULL;
main_Color_7_out_1 = NULL;
main_Scale_2_in_2 = [1 1 1];
main_Scale_2_out_1 = NULL;
macro Image(
        id,
        object,
        where,
        useVector,
        to,
        from,
        width,
        resolution,
        aspect,
        up,
        viewAngle,
        perspective,
        options,
        buttonState = 1,
        buttonUpApprox = "none",
        buttonDownApprox = "none",
        buttonUpDensity = 1,
        buttonDownDensity = 1,
        renderMode = 0,
        defaultCamera,
        reset,
        backgroundColor,
        throttle,
        RECenable = 0,
        RECfile,
        RECformat,
        RECresolution,
        RECaspect,
        AAenable = 0,
        AAlabels,
        AAticks,
        AAcorners,
        AAframe,
        AAadjust,
        AAcursor,
        AAgrid,
        AAcolors,
        AAannotation,
        AAlabelscale,
        AAfont,
        interactionMode,
        title,
        AAxTickLocs,
        AAyTickLocs,
        AAzTickLocs,
        AAxTickLabels,
        AAyTickLabels,
        AAzTickLabels,
        webOptions) -> (
        object,
        camera,
        where)
{
    ImageMessage(
        id,
        backgroundColor,
        throttle,
        RECenable,
        RECfile,
        RECformat,
        RECresolution,
        RECaspect,
        AAenable,
        AAlabels,
        AAticks,
        AAcorners,
        AAframe,
        AAadjust,
        AAcursor,
        AAgrid,
        AAcolors,
        AAannotation,
        AAlabelscale,
        AAfont,
        AAxTickLocs,
        AAyTickLocs,
        AAzTickLocs,
        AAxTickLabels,
        AAyTickLabels,
        AAzTickLabels,
        interactionMode,
        title,
        renderMode,
        buttonUpApprox,
        buttonDownApprox,
        buttonUpDensity,
        buttonDownDensity) [instance: 1, cache: 1];
    autoCamera =
        AutoCamera(
            object,
            "front",
            object,
            resolution,
            aspect,
            [0,1,0],
            perspective,
            viewAngle,
            backgroundColor) [instance: 1, cache: 1];
    realCamera =
        Camera(
            to,
            from,
            width,
            resolution,
            aspect,
            up,
            perspective,
            viewAngle,
            backgroundColor) [instance: 1, cache: 1];
    coloredDefaultCamera = 
	 UpdateCamera(defaultCamera,
            background=backgroundColor) [instance: 1, cache: 1];
    nullDefaultCamera =
        Inquire(defaultCamera,
            "is null + 1") [instance: 1, cache: 1];
    resetCamera =
        Switch(
            nullDefaultCamera,
            coloredDefaultCamera,
            autoCamera) [instance: 1, cache: 1];
    resetNull = 
        Inquire(
            reset,
            "is null + 1") [instance: 2, cache: 1];
    reset =
        Switch(
            resetNull,
            reset,
            0) [instance: 2, cache: 1];
    whichCamera =
        Compute(
            "($0 != 0 || $1 == 0) ? 1 : 2",
            reset,
            useVector) [instance: 1, cache: 1];
    camera = Switch(
            whichCamera,
            resetCamera,
            realCamera) [instance: 3, cache: 1];
    AAobject =
        AutoAxes(
            object,
            camera,
            AAlabels,
            AAticks,
            AAcorners,
            AAframe,
            AAadjust,
            AAcursor,
            AAgrid,
            AAcolors,
            AAannotation,
            AAlabelscale,
            AAfont,
            AAxTickLocs,
            AAyTickLocs,
            AAzTickLocs,
            AAxTickLabels,
            AAyTickLabels,
            AAzTickLabels) [instance: 1, cache: 1];
    switchAAenable = Compute("$0+1",
	     AAenable) [instance: 2, cache: 1];
    object = Switch(
	     switchAAenable,
	     object,
	     AAobject) [instance:4, cache: 1];
    SWapproximation_options =
        Switch(
            buttonState,
            buttonUpApprox,
            buttonDownApprox) [instance: 5, cache: 1];
    SWdensity_options =
        Switch(
            buttonState,
            buttonUpDensity,
            buttonDownDensity) [instance: 6, cache: 1];
    HWapproximation_options =
        Format(
            "%s,%s",
            buttonDownApprox,
            buttonUpApprox) [instance: 1, cache: 1];
    HWdensity_options =
        Format(
            "%d,%d",
            buttonDownDensity,
            buttonUpDensity) [instance: 2, cache: 1];
    switchRenderMode = Compute(
	     "$0+1",
	     renderMode) [instance: 3, cache: 1];
    approximation_options = Switch(
	     switchRenderMode,
            SWapproximation_options,
	     HWapproximation_options) [instance: 7, cache: 1];
    density_options = Switch(
	     switchRenderMode,
            SWdensity_options,
            HWdensity_options) [instance: 8, cache: 1];
    renderModeString = Switch(
            switchRenderMode,
            "software",
            "hardware")[instance: 9, cache: 1];
    object_tag = Inquire(
            object,
            "object tag")[instance: 3, cache: 1];
    annoted_object =
        Options(
            object,
            "send boxes",
            0,
            "cache",
            1,
            "object tag",
            object_tag,
            "ddcamera",
            whichCamera,
            "rendering approximation",
            approximation_options,
            "render every",
            density_options,
            "button state",
            buttonState,
            "rendering mode",
            renderModeString) [instance: 1, cache: 1];
    RECresNull =
        Inquire(
            RECresolution,
            "is null + 1") [instance: 4, cache: 1];
    ImageResolution =
        Inquire(
            camera,
            "camera resolution") [instance: 5, cache: 1];
    RECresolution =
        Switch(
            RECresNull,
            RECresolution,
            ImageResolution) [instance: 10, cache: 1];
    RECaspectNull =
        Inquire(
            RECaspect,
            "is null + 1") [instance: 6, cache: 1];
    ImageAspect =
        Inquire(
            camera,
            "camera aspect") [instance: 7, cache: 1];
    RECaspect =
        Switch(
            RECaspectNull,
            RECaspect,
            ImageAspect) [instance: 11, cache: 1];
    switchRECenable = Compute(
          "$0 == 0 ? 1 : (($2 == $3) && ($4 == $5)) ? ($1 == 1 ? 2 : 3) : 4",
            RECenable,
            switchRenderMode,
            RECresolution,
            ImageResolution,
            RECaspect,
	     ImageAspect) [instance: 4, cache: 1];
    NoRECobject, RECNoRerenderObject, RECNoRerHW, RECRerenderObject = Route(switchRECenable, annoted_object);
    Display(
        NoRECobject,
        camera,
        where,
        throttle) [instance: 1, cache: 1];
    image =
        Render(
            RECNoRerenderObject,
            camera) [instance: 1, cache: 1];
    Display(
        image,
        NULL,
        where,
        throttle) [instance: 2, cache: 1];
    WriteImage(
        image,
        RECfile,
        RECformat) [instance: 1, cache: 1];
    rec_where = Display(
        RECNoRerHW,
        camera,
        where,
        throttle) [instance: 1, cache: 0];
    rec_image = ReadImageWindow(
        rec_where) [instance: 1, cache: 1];
    WriteImage(
        rec_image,
        RECfile,
        RECformat) [instance: 1, cache: 1];
    RECupdateCamera =
	UpdateCamera(
	    camera,
	    resolution=RECresolution,
	    aspect=RECaspect) [instance: 2, cache: 1];
    Display(
        RECRerenderObject,
        camera,
        where,
        throttle) [instance: 1, cache: 1];
    RECRerenderObject =
	ScaleScreen(
	    RECRerenderObject,
	    NULL,
	    RECresolution,
	    camera) [instance: 1, cache: 1];
    image =
        Render(
            RECRerenderObject,
            RECupdateCamera) [instance: 2, cache: 1];
    WriteImage(
        image,
        RECfile,
        RECformat) [instance: 2, cache: 1];
}
main_Image_8_in_1 = "Image_8";
main_Image_8_in_3 = "X24,,";
main_Image_8_in_4 = 1;
main_Image_8_in_5 = [-1.49012e-07 -1.78814e-07 -1.78814e-07];
main_Image_8_in_6 = [3.2385 3.2385 3.98889];
main_Image_8_in_7 = 3.25478;
main_Image_8_in_8 = 640;
main_Image_8_in_9 = 0.751;
main_Image_8_in_10 = [0 1 0];
main_Image_8_in_11 = NULL;
main_Image_8_in_12 = 0;
main_Image_8_in_13 = NULL;
main_Image_8_in_14 = 1;
main_Image_8_in_15 = NULL;
main_Image_8_in_16 = NULL;
main_Image_8_in_17 = NULL;
main_Image_8_in_18 = NULL;
main_Image_8_in_19 = 0;
main_Image_8_in_20 = NULL;
main_Image_8_in_21 = NULL;
main_Image_8_in_22 = NULL;
main_Image_8_in_23 = NULL;
main_Image_8_in_25 = NULL;
main_Image_8_in_26 = NULL;
main_Image_8_in_27 = NULL;
main_Image_8_in_28 = NULL;
main_Image_8_in_29 = NULL;
main_Image_8_in_30 = NULL;
main_Image_8_in_31 = NULL;
main_Image_8_in_32 = NULL;
main_Image_8_in_33 = NULL;
main_Image_8_in_34 = NULL;
main_Image_8_in_35 = NULL;
main_Image_8_in_36 = NULL;
main_Image_8_in_37 = NULL;
main_Image_8_in_38 = NULL;
main_Image_8_in_39 = NULL;
main_Image_8_in_40 = NULL;
main_Image_8_in_41 = "rotate";
main_Image_8_in_42 = NULL;
main_Image_8_in_43 = NULL;
main_Image_8_in_44 = NULL;
main_Image_8_in_45 = NULL;
main_Image_8_in_46 = NULL;
main_Image_8_in_47 = NULL;
main_Image_8_in_48 = NULL;
main_Image_8_in_49 = NULL;
main_SetLocal_2_in_3 = NULL;
Executive("product version 4 3 0");
$sync
main();
